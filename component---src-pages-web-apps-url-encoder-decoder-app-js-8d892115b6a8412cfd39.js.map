{"version":3,"file":"component---src-pages-web-apps-url-encoder-decoder-app-js-8d892115b6a8412cfd39.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/icons.jsx","webpack://gatsby-starter-default/./src/components/layout/header.js","webpack://gatsby-starter-default/./src/components/layout/footer.js","webpack://gatsby-starter-default/./src/components/layout/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/urlencoderdecoder-app/URLEncoderDecoderComponent.js","webpack://gatsby-starter-default/./src/pages/web-apps/url-encoder-decoder-app.js"],"sourcesContent":["import React from \"react\"\n\nexport const GamepadIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.875L5.999 12zm0 0h7.5\" />\n  </svg>\n);\n\nexport const CodeBracketIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.25 6.75L22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3l-4.5 16.5\" />\n  </svg>\n);\n\nexport const ArrowLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\" />\n  </svg>\n);\n\nexport const GithubIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" className=\"w-5 h-5\">\n    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\" />\n  </svg>\n);\n\nexport const MaximizeIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9M20.25 20.25h-4.5m4.5 0v-4.5m0-4.5L15 15\" />\n  </svg>\n);\n\nexport const MotionGraphicsIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2.25\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 8.25h18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 15.75h18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 3v18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 3v18\" />\n  </svg>\n);","import React from \"react\"\nimport { GamepadIcon, GithubIcon } from \"../icons\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => (\n  // 배경을 흰색으로, 그림자 유지, 텍스트 색상 어둡게\n  <header className=\"bg-white text-slate-800 shadow-lg sticky top-0 z-50\">\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-20\">\n      <Link to=\"/\">\n        <div className=\"flex items-center space-x-2 cursor-pointer\">\n            <GamepadIcon /> {/* 아이콘 색상은 부모 텍스트 색상을 따름 */}\n            <h2 className=\"text-2xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-purple-500 via-pink-500 to-red-500\">Projects Hub</h2>\n        </div>\n      </Link>\n      <nav className=\"flex items-center space-x-4 sm:space-x-6\">\n        <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium flex items-center space-x-2 transition-colors duration-200\">\n          <GithubIcon />\n          <span>GitHub</span>\n        </a>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header","import React from \"react\"\n\nconst Footer = () => (\n  // 배경을 밝은 회색으로, 텍스트 색상 어둡게\n  <footer className=\"bg-gray-100 text-gray-600 py-8 mt-auto border-t border-gray-200\">\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 text-center text-sm\">\n      &copy; {new Date().getFullYear()} Silbaram. All rights reserved.\n      <p className=\"mt-1\">Powered by React, Phaser & Gatsby.</p>\n    </div>\n  </footer>\n);\n\nexport default Footer","import * as React from \"react\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children, isFullscreen }) => (\n  // 전체 배경 밝은 회색, 텍스트 색상 어둡게\n  <div className={`min-h-screen bg-gray-100 text-slate-900 flex flex-col font-sans ${isFullscreen ? 'overflow-hidden' : ''}`}>\n    {!isFullscreen && <Header />}\n    <main className={`flex-grow ${isFullscreen ? '' : ''}`}>\n      {children}\n    </main>\n    {!isFullscreen && <Footer />}\n  </div>\n);\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React, { useState } from 'react';\n\nconst URLEncoderDecoderComponent = () => {\n    const [input, setInput] = useState('');\n    const [encodedText, setEncodedText] = useState('');\n    const [decodedText, setDecodedText] = useState('');\n\n    const encodeText = () => {\n        const encoded = input.replace(/[^/:?#[\\]@!$&'()*+,;=]/g, (char) => encodeURIComponent(char));\n        setEncodedText(encoded);\n    };\n\n    const decodeText = () => {\n        try {\n        const decoded = decodeURIComponent(input.replace(/%(?![0-9A-Fa-f]{2})/g, '%25'));\n        setDecodedText(decoded);\n        } catch (error) {\n        setDecodedText('Unable to decode the text.');\n        }\n    };\n\n    const resetAll = () => {\n        setInput('');\n        setEncodedText('');\n        setDecodedText('');\n    };\n\n    const styles = {\n        container: {\n        maxWidth: '800px',\n        margin: '40px auto',\n        padding: '20px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        fontFamily: 'Arial, sans-serif',\n        },\n        title: {\n        fontSize: '24px',\n        fontWeight: 'bold',\n        marginBottom: '20px',\n        color: '#333',\n        },\n        textarea: {\n        width: '100%',\n        height: '100px',\n        padding: '10px',\n        marginBottom: '20px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        fontSize: '14px',\n        },\n        buttonContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '20px',\n        },\n        button: {\n        padding: '10px 20px',\n        borderRadius: '4px',\n        border: 'none',\n        color: 'white',\n        cursor: 'pointer',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        },\n        encodeButton: {\n        backgroundColor: '#4CAF50',\n        },\n        decodeButton: {\n        backgroundColor: '#2196F3',\n        },\n        resetButton: {\n        backgroundColor: '#f44336',\n        },\n        resultContainer: {\n        marginBottom: '20px',\n        },\n        resultTitle: {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        marginBottom: '10px',\n        color: '#333',\n        },\n        resultText: {\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        minHeight: '50px',\n        wordBreak: 'break-all',\n        },\n    };\n\n    return (\n        <div style={styles.container}>\n        <h1 style={styles.title}>URL Encoder / Decoder</h1>\n        <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            style={styles.textarea}\n            placeholder=\"Enter text here\"\n        />\n        <div style={styles.buttonContainer}>\n            <button\n            onClick={encodeText}\n            style={{...styles.button, ...styles.encodeButton}}\n            >\n            Encode\n            </button>\n            <button\n            onClick={decodeText}\n            style={{...styles.button, ...styles.decodeButton}}\n            >\n            Decode\n            </button>\n            <button\n            onClick={resetAll}\n            style={{...styles.button, ...styles.resetButton}}\n            >\n            Reset\n            </button>\n        </div>\n        <div style={styles.resultContainer}>\n            <h2 style={styles.resultTitle}>Encoded Result:</h2>\n            <div style={styles.resultText}>{encodedText}</div>\n        </div>\n        <div style={styles.resultContainer}>\n            <h2 style={styles.resultTitle}>Decoded Result:</h2>\n            <div style={styles.resultText}>{decodedText}</div>\n        </div>\n        </div>\n    );\n};\n\nexport default URLEncoderDecoderComponent","import React from 'react';\nimport { Link } from \"gatsby\";\n\nimport Seo from \"../../components/seo\";\nimport URLEncoderDecoderComponent from \"../../components/urlencoderdecoder-app/URLEncoderDecoderComponent\";\nimport Layout from \"../../components/layout/layout\"\n\n//TODO 여기를 템플릿으로 변경 하기\nconst URLEncoderDecoderrApp = () => (\n    <Layout>\n        <div>\n            <h1>JSON Formatter</h1>\n            <URLEncoderDecoderComponent />\n        </div>\n            \n        <br />\n        <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n)\n\nexport const Head = () => <Seo title=\"A service that provides features that make it easier to view JSON formats.\" />\n\nexport default URLEncoderDecoderrApp"],"names":["GamepadIcon","xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","CodeBracketIcon","ArrowLeftIcon","GithubIcon","MotionGraphicsIcon","x","y","width","height","rx","Link","to","href","target","rel","Date","getFullYear","children","isFullscreen","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","input","setInput","useState","encodedText","setEncodedText","decodedText","setDecodedText","styles","container","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","fontFamily","fontSize","fontWeight","marginBottom","color","textarea","border","buttonContainer","display","justifyContent","button","cursor","encodeButton","decodeButton","resetButton","resultContainer","resultTitle","resultText","minHeight","wordBreak","style","value","onChange","e","placeholder","onClick","encoded","replace","char","encodeURIComponent","decoded","decodeURIComponent","error","Head"],"sourceRoot":""}