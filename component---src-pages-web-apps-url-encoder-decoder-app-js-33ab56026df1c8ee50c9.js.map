{"version":3,"file":"component---src-pages-web-apps-url-encoder-decoder-app-js-33ab56026df1c8ee50c9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/web-apps/url-encoder-decoder-app.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#20232a`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          silbaram\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\n\nconst URLEncoderDecoder = () => {\n    const [input, setInput] = useState('');\n    const [encodedText, setEncodedText] = useState('');\n    const [decodedText, setDecodedText] = useState('');\n\n    const encodeText = () => {\n        const encoded = input.replace(/[^/:?#[\\]@!$&'()*+,;=]/g, (char) => encodeURIComponent(char));\n        setEncodedText(encoded);\n    };\n\n    const decodeText = () => {\n        try {\n        const decoded = decodeURIComponent(input.replace(/%(?![0-9A-Fa-f]{2})/g, '%25'));\n        setDecodedText(decoded);\n        } catch (error) {\n        setDecodedText('Unable to decode the text.');\n        }\n    };\n\n    const resetAll = () => {\n        setInput('');\n        setEncodedText('');\n        setDecodedText('');\n    };\n\n    return (\n        <div className=\"max-w-2xl mx-auto mt-10 p-6 bg-white rounded-lg shadow-xl\">\n        <h1 className=\"text-2xl font-bold mb-4\">URL Encoder / Decoder</h1>\n        <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-md mb-4 h-24 resize-y\"\n            placeholder=\"Enter text here\"\n        />\n        <div className=\"flex space-x-2 mb-4\">\n            <button\n            onClick={encodeText}\n            className=\"flex-1 bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n            >\n            Encode\n            </button>\n            <button\n            onClick={decodeText}\n            className=\"flex-1 bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n            >\n            Decode\n            </button>\n            <button\n            onClick={resetAll}\n            className=\"flex-1 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\n            >\n            Reset\n            </button>\n        </div>\n        <div className=\"mb-4\">\n            <h2 className=\"font-semibold mb-2\">Encoded Result:</h2>\n            <div className=\"bg-gray-100 p-2 rounded-md overflow-x-auto\">\n            <pre className=\"whitespace-pre-wrap break-all\">{encodedText}</pre>\n            </div>\n        </div>\n        <div>\n            <h2 className=\"font-semibold mb-2\">Decoded Result:</h2>\n            <div className=\"bg-gray-100 p-2 rounded-md overflow-x-auto\">\n            <pre className=\"whitespace-pre-wrap break-all\">{decodedText}</pre>\n            </div>\n        </div>\n        </div>\n    );\n};\n\n//TODO 여기를 템플릿으로 변경 하기\nconst URLEncoderDecoderrApp = () => (\n    <Layout>\n        <div>\n            <h1>JSON Formatter</h1>\n            <URLEncoderDecoder />\n        </div>\n            \n        <br />\n        <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n)\n\nexport const Head = () => <Seo title=\"A service that provides features that make it easier to view JSON formats.\" />\n\nexport default URLEncoderDecoderrApp"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author","URLEncoderDecoder","input","setInput","useState","encodedText","setEncodedText","decodedText","setDecodedText","className","value","onChange","e","target","placeholder","onClick","encoded","replace","char","encodeURIComponent","decoded","decodeURIComponent","error","Head"],"sourceRoot":""}