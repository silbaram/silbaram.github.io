{"version":3,"file":"component---src-pages-web-motion-shape-snow-index-js-eb741146051e80575f8f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Icons.jsx","webpack://gatsby-starter-default/./src/components/ProjectDetail.js","webpack://gatsby-starter-default/./src/components/Seo.js","webpack://gatsby-starter-default/./src/components/layout/Header.js","webpack://gatsby-starter-default/./src/components/layout/Footer.js","webpack://gatsby-starter-default/./src/components/layout/Layout.js","webpack://gatsby-starter-default/./src/pages/web-motion/shape-snow/index.js"],"sourcesContent":["import React from \"react\"\n\nexport const GamepadIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.875L5.999 12zm0 0h7.5\" />\n  </svg>\n);\n\nexport const CodeBracketIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.25 6.75L22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3l-4.5 16.5\" />\n  </svg>\n);\n\nexport const ArrowLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\" />\n  </svg>\n);\n\nexport const GithubIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" className=\"w-5 h-5\">\n    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\" />\n  </svg>\n);\n\nexport const MaximizeIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9M20.25 20.25h-4.5m4.5 0v-4.5m0-4.5L15 15\" />\n  </svg>\n);\n\nexport const MotionGraphicsIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2.25\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 8.25h18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 15.75h18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 3v18\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 3v18\" />\n  </svg>\n);\n","import { ArrowLeftIcon, MotionGraphicsIcon } from \"./Icons\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout/Layout\"\n\nconst ProjectDetail = ({ title, isFullscreen = true, mainClassName = 'bg-slate-100', children }) => {\n\n  return (\n    <>\n      {isFullscreen ? (\n        <div className=\"flex flex-col h-screen\">\n          <header className=\"bg-slate-700 text-white text-2xl font-semibold p-4 text-center\">\n            {title}\n          </header>\n          <main className={`flex-grow p-4 overflow-auto ${mainClassName}`}>\n            {children}\n          </main>\n        </div>\n      ) : (\n        <Layout>\n          <div className=\"flex flex-col h-screen pt-8\">\n            <header className=\"bg-gradient-to-r from-purple-500 to-indigo-500 text-white p-4 rounded-t-lg shadow-lg relative mb-4\">\n              <Link to=\"/\" className=\"absolute left-4 flex items-center space-x-2 text-white hover:opacity-80\">\n                <ArrowLeftIcon className=\"w-5 h-5\" />\n                <span className=\"text-base font-medium\">Projects</span>\n              </Link>\n              <div className=\"flex items-center justify-center space-x-2\">\n                <MotionGraphicsIcon className=\"w-6 h-6\" />\n                <span className=\"text-2xl font-semibold\">{title}</span>\n              </div>\n            </header>\n\n            <main className={`flex-grow p-4 pt-8 overflow-auto ${mainClassName}`}>\n              {children}\n            </main>\n          </div>\n        </Layout>\n      )}\n    </>\n  );\n};\n\nexport default ProjectDetail\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\"\nimport { GamepadIcon, GithubIcon } from \"../Icons\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => (\n  // 배경을 흰색으로, 그림자 유지, 텍스트 색상 어둡게\n  <header className=\"bg-white text-slate-800 shadow-lg sticky top-0 z-50\">\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-20\">\n      <Link to=\"/\">\n        <div className=\"flex items-center space-x-2 cursor-pointer\">\n            <GamepadIcon /> {/* 아이콘 색상은 부모 텍스트 색상을 따름 */}\n            <h2 className=\"text-2xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-purple-500 via-pink-500 to-red-500\">Projects Hub</h2>\n        </div>\n      </Link>\n      <nav className=\"flex items-center space-x-4 sm:space-x-6\">\n        <a href=\"https://github.com/silbaram/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium flex items-center space-x-2 transition-colors duration-200\">\n          <GithubIcon />\n          <span>GitHub</span>\n        </a>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => (\n  // 배경을 밝은 회색으로, 텍스트 색상 어둡게\n  <footer className=\"bg-gray-100 text-gray-600 py-8 mt-auto border-t border-gray-200\">\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 text-center text-sm\">\n      &copy; {new Date().getFullYear()} Silbaram. All rights reserved.\n      <p className=\"mt-1\">Powered by React, Phaser & Gatsby.</p>\n    </div>\n  </footer>\n);\n\nexport default Footer\n","import * as React from \"react\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\n\nconst Layout = ({ children, isFullscreen }) => (\n  // 전체 배경 밝은 회색, 텍스트 색상 어둡게\n  <div className={`min-h-screen bg-gray-100 text-slate-900 flex flex-col font-sans ${isFullscreen ? 'overflow-hidden' : ''}`}>\n    {!isFullscreen && <Header />}\n    <main className={`flex-grow ${isFullscreen ? '' : ''}`}>\n      {children}\n    </main>\n    {!isFullscreen && <Footer />}\n  </div>\n);\n\nexport default Layout\n","import React, { useEffect, useRef, useState } from \"react\"\nimport ProjectDetail from \"../../../components/ProjectDetail\"\nimport Seo from \"../../../components/Seo\"\n\nconst ShapeSnowCanvas = ({ speed, density }) => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) return\n    const ctx = canvas.getContext(\"2d\")\n    canvas.style.backgroundColor = \"#1e293b\"\n    let animationFrameId\n\n    let shapes = []\n    const baseSize = 30\n    let columns = 0\n    let stacks = []\n    const letters = [\n      ...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"),\n      \"\\u3131\",\n      \"\\u3132\",\n      \"\\u3134\",\n      \"\\u3137\",\n      \"\\u3138\",\n      \"\\u3139\",\n      \"\\u3141\",\n      \"\\u3142\",\n      \"\\u3145\",\n      \"\\u3147\",\n      \"\\u3148\",\n      \"\\u314A\",\n      \"\\u314B\",\n      \"\\u314C\",\n      \"\\u314D\",\n      \"\\u314E\",\n      \"\\u314F\",\n      \"\\u3150\",\n      \"\\u3151\",\n      \"\\u3152\",\n      \"\\u3153\",\n      \"\\u3154\",\n      \"\\u3155\",\n      \"\\u3156\",\n      \"\\u3157\",\n      \"\\u3158\",\n      \"\\u3159\",\n      \"\\u315A\",\n      \"\\u315B\",\n      \"\\u315C\",\n      \"\\u315D\",\n      \"\\u315E\",\n      \"\\u315F\",\n      \"\\u3160\",\n      \"\\u3161\",\n      \"\\u3162\",\n      \"\\u3163\",\n    ]\n\n    const resize = () => {\n      const parent = canvas.parentElement\n      canvas.width = parent ? parent.clientWidth : window.innerWidth\n      canvas.height = parent ? parent.clientHeight : window.innerHeight\n      columns = Math.max(1, Math.floor(canvas.width / baseSize))\n      stacks = Array(columns).fill(0)\n      shapes = []\n    }\n    resize()\n    window.addEventListener(\"resize\", resize)\n\n    const spawnShape = time => {\n      const col = Math.floor(Math.random() * columns)\n      const x = col * baseSize + baseSize / 2\n      const char = letters[Math.floor(Math.random() * letters.length)]\n      shapes.push({\n        col,\n        x,\n        y: -baseSize,\n        size: baseSize,\n        char,\n        state: \"falling\",\n        landedAt: 0,\n        melt: 0,\n        angle: Math.random() * Math.PI * 2,\n        spin: (Math.random() - 0.5) * 0.1,\n      })\n    }\n\n    const drawShape = shape => {\n      const size = Math.max(0, shape.size * (1 - shape.melt))\n      if (size <= 0) return\n      ctx.save()\n      ctx.translate(shape.x, shape.y + (shape.size - size))\n      ctx.rotate(shape.angle)\n      ctx.fillStyle = \"#ffffff\"\n      ctx.strokeStyle = \"rgba(0,0,0,0.4)\"\n      ctx.lineWidth = 1\n      ctx.font = `${size}px sans-serif`\n      ctx.textAlign = \"center\"\n      ctx.textBaseline = \"bottom\"\n      ctx.strokeText(shape.char, 0, size)\n      ctx.fillText(shape.char, 0, size)\n      ctx.restore()\n    }\n\n    let lastSpawn = 0\n    const spawnInterval = 600\n\n    const update = time => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      if (time - lastSpawn > spawnInterval) {\n        for (let i = 0; i < density; i++) {\n          spawnShape(time)\n        }\n        lastSpawn = time\n      }\n      shapes.forEach(shape => {\n        if (shape.state === \"falling\") {\n          shape.y += speed\n          shape.angle += shape.spin\n          const groundY = canvas.height - (stacks[shape.col] + 1) * baseSize\n          if (shape.y >= groundY) {\n            shape.y = groundY\n            shape.state = \"landed\"\n            shape.landedAt = time\n            stacks[shape.col]++\n            shape.spin = 0\n          }\n        } else if (shape.state === \"landed\") {\n          if (time - shape.landedAt > 2000) {\n            shape.melt += 0.005 * speed\n            if (shape.melt >= 1) {\n              shape.remove = true\n              stacks[shape.col]--\n              shapes.forEach(other => {\n                if (\n                  other.col === shape.col &&\n                  other.y < shape.y &&\n                  other.state === \"landed\"\n                ) {\n                  other.y += baseSize\n                }\n              })\n            }\n          }\n        }\n        drawShape(shape)\n      })\n      shapes = shapes.filter(s => !s.remove)\n      animationFrameId = requestAnimationFrame(update)\n    }\n    animationFrameId = requestAnimationFrame(update)\n\n    return () => {\n      window.removeEventListener(\"resize\", resize)\n      cancelAnimationFrame(animationFrameId)\n    }\n  }, [speed, density])\n\n  return <canvas ref={canvasRef} className=\"absolute inset-0 w-full h-full\" />\n}\n\nconst ShapeSnowMotion = ({ location }) => {\n  const isFullscreen = location?.state?.isFullscreen ?? true\n  const [speed, setSpeed] = useState(1)\n  const [density, setDensity] = useState(1)\n  return (\n    <ProjectDetail\n      title={\"Shape Snow\"}\n      isFullscreen={isFullscreen}\n      mainClassName=\"bg-transparent overflow-hidden p-0\"\n    >\n      <div className=\"relative h-full\">\n        <ShapeSnowCanvas speed={speed} density={density} />\n        <div className=\"absolute top-4 right-4 space-y-2 bg-white/70 p-4 rounded shadow text-sm\">\n          <label className=\"block\">\n            Speed:{\" \"}\n            <input\n              type=\"range\"\n              min=\"0.5\"\n              max=\"3\"\n              step=\"0.5\"\n              value={speed}\n              onChange={e => setSpeed(parseFloat(e.target.value))}\n              className=\"w-32\"\n            />\n          </label>\n          <label className=\"block\">\n            Amount:{\" \"}\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={density}\n              onChange={e => setDensity(parseInt(e.target.value, 10))}\n              className=\"w-32\"\n            />\n          </label>\n        </div>\n      </div>\n    </ProjectDetail>\n  )\n}\n\nexport const Head = () => (\n  <Seo\n    title=\"Shape Snow Motion\"\n    description=\"Motion graphic of falling letters that pile up and melt away.\"\n    keywords={[\"Motion\", \"Shape Snow\", \"Canvas\"]}\n  />\n)\n\nexport default ShapeSnowMotion\n"],"names":["GamepadIcon","xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","CodeBracketIcon","ArrowLeftIcon","GithubIcon","MotionGraphicsIcon","x","y","width","height","rx","title","isFullscreen","mainClassName","children","Link","to","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","href","target","rel","Date","getFullYear","Header","ShapeSnowCanvas","speed","density","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","animationFrameId","style","backgroundColor","shapes","baseSize","columns","stacks","letters","split","resize","parent","parentElement","clientWidth","window","innerWidth","clientHeight","innerHeight","Math","max","floor","Array","addEventListener","spawnShape","time","col","random","char","length","push","size","state","landedAt","melt","angle","PI","spin","lastSpawn","update","clearRect","i","forEach","shape","groundY","remove","other","save","translate","rotate","fillStyle","strokeStyle","lineWidth","font","textAlign","textBaseline","strokeText","fillText","restore","drawShape","filter","s","requestAnimationFrame","removeEventListener","cancelAnimationFrame","ref","Head","keywords","location","setSpeed","useState","setDensity","type","min","step","value","onChange","e","parseFloat","parseInt"],"sourceRoot":""}