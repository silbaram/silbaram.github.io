{"version":3,"file":"component---src-pages-web-apps-json-viewer-app-js-fb98b8f95c7df70b4fb9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/web-apps/json-viewer-app.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#20232a`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <meta name=\"google-site-verification\" content=\"wg-ONgbuHGSWXfx53JZPkFrmyKqPONIUdnzCVvw1hCY\" />\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          silbaram\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"google-site-verification\" content=\"wg-ONgbuHGSWXfx53JZPkFrmyKqPONIUdnzCVvw1hCY\" />\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\n\nconst JSONFormatter = () => {\n    const [input, setInput] = useState('');\n    const [error, setError] = useState('');\n    const [jsonData, setJsonData] = useState(null);\n    const [collapsedState, setCollapsedState] = useState({});\n\n    const formatJSON = (input) => {\n        try {\n            const parsedData = JSON.parse(input);\n            setJsonData(parsedData);\n            setError('');\n        } catch (e) {\n            setJsonData(null);\n            setError(`Error parsing JSON: ${e.message}`);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setInput(event.target.value);\n        formatJSON(event.target.value);\n    };\n\n    const toggleCollapse = (key) => {\n        setCollapsedState((prevState) => ({\n            ...prevState,\n            [key]: !prevState[key]\n        }));\n    };\n\n    const renderJSON = (data, level = 0, keyPath = '') => {\n        if (typeof data === 'object' && data !== null) {\n            const isArray = Array.isArray(data);\n            const key = keyPath || 'root';\n            const collapsed = collapsedState[key] || false;\n            const indent = ' '.repeat(level * 4); // 들여쓰기 설정\n\n            return (\n                <div style={{ whiteSpace: 'pre-wrap' }}>\n                    <span style={{ marginLeft: indent }}>\n                        {isArray ? '' : `\"${key.split('.').pop()}\": `}\n                        <span\n                            onClick={() => toggleCollapse(key)}\n                            style={{ cursor: 'pointer', color: 'blue', marginLeft: '5px' }}\n                        >\n                            {collapsed ? '[+]' : '[-]'}\n                        </span>\n                    </span>\n                    {collapsed ? (\n                        <span>{isArray ? '[ ... ]' : '{ ... }'}</span>\n                    ) : (\n                        <span>\n                            {isArray ? '[' : '{ '}\n                            <div style={{ marginLeft: `${(level + 1) * 20}px` }}>\n                                {Object.keys(data).map((subKey, index, array) => {\n                                    const newKeyPath = keyPath ? `${keyPath}.${subKey}` : subKey;\n                                    return (\n                                        <div key={index}>\n                                            {renderJSON(data[subKey], level + 1, newKeyPath)}\n                                            {index < array.length - 1 ? ',' : ''}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                            <span>{isArray ? ']' : '}'}</span>\n                        </span>\n                    )}\n                </div>\n            );\n        } else {\n            return (\n                <span style={{ color: 'green', display: 'inline' }}>\n                    {JSON.stringify(data)}\n                </span>\n            );\n        }\n    };\n\n    return (\n        <div>\n            <textarea\n                value={input}\n                onChange={handleInputChange}\n                style={{ width: '100%', height: '200px' }}\n                placeholder=\"여기에 JSON을 입력하세요...\"\n            />\n            <div style={{ background: '#f4f4f4', padding: '10px', marginTop: '20px', overflowX: 'auto', whiteSpace: 'pre-wrap' }}>\n                {error ? (\n                    <pre>{error}</pre>\n                ) : jsonData ? (\n                    <pre>{renderJSON(jsonData)}</pre>\n                ) : (\n                    \"유효한 JSON을 입력하세요.\"\n                )}\n            </div>\n        </div>\n    );\n};\n\n//TODO 여기를 템플릿으로 변경 하기\nconst JsonViewerApp = () => (\n    <Layout>\n        <div>\n            <h1>JSON Formatter</h1>\n            <JSONFormatter />\n        </div>\n            \n        <br />\n        <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n)\n\nexport const Head = () => <Seo title=\"A service that provides features that make it easier to view JSON formats.\" />\n\nexport default JsonViewerApp"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","name","content","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","property","author","JSONFormatter","input","setInput","useState","error","setError","jsonData","setJsonData","collapsedState","setCollapsedState","renderJSON","level","keyPath","isArray","Array","key","collapsed","indent","repeat","whiteSpace","marginLeft","split","pop","onClick","prevState","toggleCollapse","cursor","Object","keys","map","subKey","index","array","newKeyPath","length","display","JSON","stringify","value","onChange","event","target","parsedData","parse","e","message","formatJSON","width","height","placeholder","overflowX","Head"],"sourceRoot":""}