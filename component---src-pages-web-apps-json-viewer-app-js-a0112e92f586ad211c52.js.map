{"version":3,"file":"component---src-pages-web-apps-json-viewer-app-js-a0112e92f586ad211c52.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/web-apps/json-viewer-app.js"],"sourcesContent":["import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `#20232a`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n    <meta name=\"google-site-verification\" content=\"wg-ONgbuHGSWXfx53JZPkFrmyKqPONIUdnzCVvw1hCY\" />\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          © {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          silbaram\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../../components/layout\"\r\nimport Seo from \"../../components/seo\"\r\n\r\nconst JSONFormatter = () => {\r\n    const [input, setInput] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [jsonData, setJsonData] = useState(null);\r\n    const [collapsedState, setCollapsedState] = useState({});\r\n\r\n    const formatJSON = (input) => {\r\n        try {\r\n            const parsedData = JSON.parse(input);\r\n            setJsonData(parsedData);\r\n            setError('');\r\n        } catch (e) {\r\n            setJsonData(null);\r\n            setError(`Error parsing JSON: ${e.message}`);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setInput(event.target.value);\r\n        formatJSON(event.target.value);\r\n    };\r\n\r\n    const toggleCollapse = (key) => {\r\n        setCollapsedState((prevState) => ({\r\n            ...prevState,\r\n            [key]: !prevState[key]\r\n        }));\r\n    };\r\n\r\n    const renderJSON = (data, level = 0, keyPath = '') => {\r\n        if (typeof data === 'object' && data !== null) {\r\n            const isArray = Array.isArray(data);\r\n            const key = keyPath || 'root';\r\n            const collapsed = collapsedState[key] || false;\r\n            const indent = ' '.repeat(level * 4); // 들여쓰기 설정\r\n\r\n            return (\r\n                <div style={{ whiteSpace: 'pre-wrap' }}>\r\n                    <span style={{ marginLeft: indent }}>\r\n                        {isArray ? '' : `\"${key.split('.').pop()}\": `}\r\n                        <span\r\n                            onClick={() => toggleCollapse(key)}\r\n                            style={{ cursor: 'pointer', color: 'blue', marginLeft: '5px' }}\r\n                        >\r\n                            {collapsed ? '[+]' : '[-]'}\r\n                        </span>\r\n                    </span>\r\n                    {collapsed ? (\r\n                        <span>{isArray ? '[ ... ]' : '{ ... }'}</span>\r\n                    ) : (\r\n                        <span>\r\n                            {isArray ? '[' : '{ '}\r\n                            <div style={{ marginLeft: `${(level + 1) * 20}px` }}>\r\n                                {Object.keys(data).map((subKey, index, array) => {\r\n                                    const newKeyPath = keyPath ? `${keyPath}.${subKey}` : subKey;\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {renderJSON(data[subKey], level + 1, newKeyPath)}\r\n                                            {index < array.length - 1 ? ',' : ''}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <span>{isArray ? ']' : '}'}</span>\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <span style={{ color: 'green', display: 'inline' }}>\r\n                    {JSON.stringify(data)}\r\n                </span>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                style={{ width: '100%', height: '200px' }}\r\n                placeholder=\"여기에 JSON을 입력하세요...\"\r\n            />\r\n            <div style={{ background: '#f4f4f4', padding: '10px', marginTop: '20px', overflowX: 'auto', whiteSpace: 'pre-wrap' }}>\r\n                {error ? (\r\n                    <pre>{error}</pre>\r\n                ) : jsonData ? (\r\n                    <pre>{renderJSON(jsonData)}</pre>\r\n                ) : (\r\n                    \"유효한 JSON을 입력하세요.\"\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//TODO 여기를 템플릿으로 변경 하기\r\nconst JsonViewerApp = () => (\r\n    <Layout>\r\n        <div>\r\n            <h1>JSON Formatter</h1>\r\n            <JSONFormatter />\r\n        </div>\r\n            \r\n        <br />\r\n        <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n)\r\n\r\nexport const Head = () => <Seo title=\"A service that provides features that make it easier to view JSON formats.\" />\r\n\r\nexport default JsonViewerApp"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","name","content","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","property","author","JSONFormatter","input","setInput","useState","error","setError","jsonData","setJsonData","collapsedState","setCollapsedState","renderJSON","level","keyPath","isArray","Array","key","collapsed","indent","repeat","whiteSpace","marginLeft","split","pop","onClick","prevState","toggleCollapse","cursor","Object","keys","map","subKey","index","array","newKeyPath","length","display","JSON","stringify","value","onChange","event","target","parsedData","parse","e","message","formatJSON","width","height","placeholder","overflowX","Head"],"sourceRoot":""}